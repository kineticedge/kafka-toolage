---
networks:
  default:
    external: true
    name: kafka-toolage

volumes:
  zk: {}
  zk_log: {}
  zk_secrets: {}
  bk1: {}
  bk2: {}
  bk3: {}
  bk4: {}
  ct_a: {}
  ct_a_secrets: {}
  ct_b: {}
  ct_b_secrets: {}
  sr_secrets: {}

services:

  noauth-zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    hostname: noauth-zookeeper
    container_name: noauth-zookeeper
    healthcheck:
      test: echo ruok | nc -w 2 localhost 2181 | grep imok
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    volumes:
      - zk:/var/lib/zookeeper/data
      - zk_log:/var/lib/zookeeper/log
      - zk_secrets:/etc/zookeeper/secrets
      - ./jmx_prometheus:/opt/jmx_prometheus
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: >-
        -Dzookeeper.4lw.commands.whitelist=ruok,stat
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/zookeeper-config.yml

  noauth-broker-1:
    image: confluentinc/cp-kafka:7.2.0
    hostname: noauth-broker-1
    container_name: noauth-broker-1
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      noauth-zookeeper:
        condition: service_healthy
    volumes:
      - bk1:/var/lib/kafka/data
      - ./secrets:/etc/kafka/secrets/
      - ./jmx_prometheus:/opt/jmx_prometheus
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'noauth-zookeeper:2181'
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://noauth-broker-1:9092,SSL://noauth-broker-1:9093
      KAFKA_SSL_KEYSTORE_FILENAME: noauth-broker-1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka.key
      KAFKA_SSL_KEY_CREDENTIALS: kafka.key
      KAFKA_SSL_CLIENT_AUTH: none
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_OPTS: >-
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml
        -Dcom.sun.management.jmxremote.port=5000 -Dcom.sun.management.jmxremote.rmi.port=5000 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
      KAFKA_METRIC_REPORTERS:
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO

  noauth-broker-2:
    image: confluentinc/cp-kafka:7.2.0
    hostname: noauth-broker-2
    container_name: noauth-broker-2
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      noauth-zookeeper:
        condition: service_healthy
    volumes:
      - bk2:/var/lib/kafka/data
      - ./secrets:/etc/kafka/secrets/
      - ./jmx_prometheus:/opt/jmx_prometheus
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'noauth-zookeeper:2181'
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://noauth-broker-2:9092,SSL://noauth-broker-2:9093
      KAFKA_SSL_KEYSTORE_FILENAME: noauth-broker-2.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka.key
      KAFKA_SSL_KEY_CREDENTIALS: kafka.key
      KAFKA_SSL_CLIENT_AUTH: none
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_OPTS: >-
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml
        -Dcom.sun.management.jmxremote.port=5000 -Dcom.sun.management.jmxremote.rmi.port=5000 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
      KAFKA_METRIC_REPORTERS:
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO

  noauth-broker-3:
    image: confluentinc/cp-kafka:7.2.0
    hostname: noauth-broker-3
    container_name: noauth-broker-3
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      noauth-zookeeper:
        condition: service_healthy
    volumes:
      - bk3:/var/lib/kafka/data
      - ./secrets:/etc/kafka/secrets/
      - ./jmx_prometheus:/opt/jmx_prometheus
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'noauth-zookeeper:2181'
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://noauth-broker-3:9092,SSL://noauth-broker-3:9093
      KAFKA_SSL_KEYSTORE_FILENAME: noauth-broker-3.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka.key
      KAFKA_SSL_KEY_CREDENTIALS: kafka.key
      KAFKA_SSL_CLIENT_AUTH: none
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_OPTS: >-
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml
        -Dcom.sun.management.jmxremote.port=5000 -Dcom.sun.management.jmxremote.rmi.port=5000 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
      KAFKA_METRIC_REPORTERS:
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO

  noauth-schema-registry:
    image: confluentinc/cp-schema-registry:7.2.0
    hostname: noauth-schema-registry
    container_name: noauth-schema-registry
    stop_grace_period: 120s
    healthcheck:
      test: curl --fail http://localhost:8081/ || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      noauth-broker-1:
        condition: service_healthy
      noauth-broker-2:
        condition: service_healthy
      noauth-broker-3:
        condition: service_healthy
    volumes:
      - sr_secrets:/etc/schema-registry/secrets
      - ./secrets:/etc/kafka/secrets/
      - ./jmx_prometheus:/opt/jmx_prometheus
    environment:
      SCHEMA_REGISTRY_HOST_NAME: noauth-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: noauth-broker-1:9092,noauth-broker-2:9092,noauth-broker-3:9092
      KAFKA_METRIC_REPORTERS:
      CONFLUENT_METRICS_ENABLE: 'false'
      EXTRA_OPTS: >-
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/sr-config.yml
      SCHEMA_REGISTRY_OPTS: >-
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/sr-config.yml


  noauth-connect-a:
    image: confluentinc/cp-kafka-connect:7.2.0
    hostname: noauth-connect-a
    container_name: noauth-connect-a
    healthcheck:
      test: curl --fail http://localhost:8083/ || exit 1
      start_period: 30s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      noauth-broker-1:
        condition: service_healthy
      noauth-broker-2:
        condition: service_healthy
      noauth-broker-3:
        condition: service_healthy
    volumes:
      - ct_a:/var/lib/kafka/data
      - ct_a_secrets:/etc/kafka/secrets
      - ./jars:/etc/kafka-connect/jars
      - ./data:/data
      - ./secrets:/etc/kafka-connect/secrets
      - ./jmx_prometheus:/opt/jmx_prometheus
    command:
      - /bin/bash
      - -c
      - |
        confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:0.5.0
        /etc/confluent/docker/run &
        sleep infinity
    environment:
      CONNECT_BOOTSTRAP_SERVERS: noauth-broker-1:9092,noauth-broker-2:9092,noauth-broker-3:9092
      CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: All
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: 'connect-a'
      CONNECT_CONFIG_STORAGE_TOPIC: 'connect-a-config'
      CONNECT_OFFSET_STORAGE_TOPIC: 'connect-a-offsets'
      CONNECT_STATUS_STORAGE_TOPIC: 'connect-a-status'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_CONFIG_PROVIDERS: file
      CONNECT_CONFIG_PROVIDERS_FILE_CLASS: 'org.apache.kafka.common.config.provider.FileConfigProvider'
      CONNECT_KEY_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://noauth-schema-registry:8081'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://noauth-schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_REST_ADVERTISED_HOST_NAME: 'noauth-connect-a'
      CONNECT_PLUGIN_PATH: /etc/kafka-connect/jars,/usr/share/confluent-hub-components,/usr/share/java,/usr/share/filestream-connectors
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_OPTS: >-
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/connect-config.yml

  noauth-connect-b:
    image: confluentinc/cp-kafka-connect:7.2.0
    hostname: noauth-connect-b
    container_name: noauth-connect-b
    healthcheck:
      test: curl --fail http://localhost:8083/ || exit 1
      start_period: 30s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      noauth-broker-1:
        condition: service_healthy
      noauth-broker-2:
        condition: service_healthy
      noauth-broker-3:
        condition: service_healthy
    volumes:
      - ct_b:/var/lib/kafka/data
      - ct_b_secrets:/etc/kafka/secrets
      - ./jars:/etc/kafka-connect/jars
      - ./data:/data
      - ./secrets:/etc/kafka-connect/secrets
      - ./jmx_prometheus:/opt/jmx_prometheus
    command:
      - /bin/bash
      - -c
      - |
        confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:0.5.0
        /etc/confluent/docker/run &
        sleep infinity
    environment:
      CONNECT_BOOTSTRAP_SERVERS: noauth-broker-1:9093,noauth-broker-2:9093,noauth-broker-3:9093
      CONNECT_SECURITY_PROTOCOL: SSL
      CONNECT_SSL_TRUSTSTORE_LOCATION: /etc/kafka-connect/secrets/kafka.server.truststore.jks
      CONNECT_SSL_TRUSTSTORE_PASSWORD: broker_secret
      CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: All
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: 'connect-b'
      CONNECT_CONFIG_STORAGE_TOPIC: 'connect-b-config'
      CONNECT_OFFSET_STORAGE_TOPIC: 'connect-b-offsets'
      CONNECT_STATUS_STORAGE_TOPIC: 'connect-b-status'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_CONFIG_PROVIDERS: file
      CONNECT_CONFIG_PROVIDERS_FILE_CLASS: 'org.apache.kafka.common.config.provider.FileConfigProvider'
      CONNECT_KEY_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://noauth-schema-registry:8081'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://noauth-schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_REST_ADVERTISED_HOST_NAME: 'noauth-connect-b'
      CONNECT_PLUGIN_PATH: /etc/kafka-connect/jars,/usr/share/confluent-hub-components,/usr/share/java,/usr/share/filestream-connectors
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_OPTS: >-
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/connect-config.yml

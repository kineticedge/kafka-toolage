---

networks:
  default:
    external: true
    name: kafka-toolage

volumes:
  zk: {}
  zk_log: {}
  zk_secrets: {}
  bk1: {}
  bk2: {}
  bk3: {}
  bk4: {}
  c1: {}
  c1_secrets: {}
  ct: {}
  ct_secrets: {}
  sr_secrets: {}

services:

  sasl-zookeeper:
    image: confluentinc/cp-zookeeper:${VERSION}
    hostname: sasl-zookeeper
    container_name: sasl-zookeeper
    healthcheck:
      test: echo ruok | nc -w 2 localhost 2181 | grep imok
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    volumes:
      - zk:/var/lib/zookeeper/data
      - zk_log:/var/lib/zookeeper/log
      - zk_secrets:/etc/zookeeper/secrets
      - ./jmx_prometheus:/opt/jmx_prometheus
      - ./secrets:/etc/zookeeper/secrets
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_AUTH_PROVIDER_SASL: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      KAFKA_OPTS: >-
        -Dzookeeper.4lw.commands.whitelist=ruok,stat
        -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper_jaas.conf
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/zookeeper-config.yml
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN

  sasl-broker-1:
    image: confluentinc/cp-kafka:${VERSION}
    hostname: sasl-broker-1
    container_name: sasl-broker-1
    stop_grace_period: 120s
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      sasl-zookeeper:
        condition: service_healthy
    ports:
      - "17072:7072"
    volumes:
      - bk1:/var/lib/kafka/data
      - ./jmx_prometheus:/opt/jmx_prometheus
      - ./secrets:/etc/kafka/secrets/
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'sasl-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,EXTERNAL_SSL:SASL_SSL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://sasl-broker-1:9092,EXTERNAL_SSL://sasl-broker-1:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_SSL_KEYSTORE_FILENAME: sasl-broker-1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka.key
      KAFKA_SSL_KEY_CREDENTIALS: kafka.key
      KAFKA_SSL_CLIENT_AUTH: none
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka.key
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.server.truststore.jks
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: User:kafka-admin;User:kafka-broker;User:kafka-broker-v2
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/broker_jaas.conf
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml
        -Djavax.net.debug=ssl:trustmanager,session,handshake:verbose
      KAFKA_METRIC_REPORTERS:
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,SCRAM-SHA-512
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'false'
      KAFKA_ZOOKEEPER_SASL_ENABLED: 'false'
      KAFKA_ZOOKEEPER_SET_ACL: 'false'

  sasl-broker-2:
    image: confluentinc/cp-kafka:${VERSION}
    hostname: sasl-broker-2
    container_name: sasl-broker-2
    stop_grace_period: 120s
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      sasl-zookeeper:
        condition: service_healthy
    ports:
      - "27072:7072"
    volumes:
      - bk2:/var/lib/kafka/data
      - ./jmx_prometheus:/opt/jmx_prometheus
      - ./secrets:/etc/kafka/secrets/
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'sasl-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,EXTERNAL_SSL:SASL_SSL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://sasl-broker-2:9092,EXTERNAL_SSL://sasl-broker-2:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_SSL_KEYSTORE_FILENAME: sasl-broker-2.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka.key
      KAFKA_SSL_KEY_CREDENTIALS: kafka.key
      KAFKA_SSL_CLIENT_AUTH: none
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka.key
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.server.truststore.jks
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: User:kafka-admin;User:kafka-broker
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/broker_jaas.conf 
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml
        -Djavax.net.debug=ssl:trustmanager,session,handshake:verbose
      KAFKA_METRIC_REPORTERS:
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,SCRAM-SHA-512
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'false'
      KAFKA_ZOOKEEPER_SASL_ENABLED: 'false'
      KAFKA_ZOOKEEPER_SET_ACL: 'false'


  sasl-broker-3:
    image: confluentinc/cp-kafka:${VERSION}
    hostname: sasl-broker-3
    container_name: sasl-broker-3
    stop_grace_period: 120s
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      sasl-zookeeper:
        condition: service_healthy
    ports:
      - "37072:7072"
    volumes:
      - bk3:/var/lib/kafka/data
      - ./jmx_prometheus:/opt/jmx_prometheus
      - ./secrets:/etc/kafka/secrets/
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'sasl-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,EXTERNAL_SSL:SASL_SSL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://sasl-broker-3:9092,EXTERNAL_SSL://sasl-broker-3:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_SSL_KEYSTORE_FILENAME: sasl-broker-3.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka.key
      KAFKA_SSL_KEY_CREDENTIALS: kafka.key
      KAFKA_SSL_CLIENT_AUTH: none
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka.key
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.server.truststore.jks
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: User:kafka-admin;User:kafka-broker
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/broker_jaas.conf 
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml
        -Djavax.net.debug=ssl:trustmanager,session,handshake:verbose
      KAFKA_METRIC_REPORTERS:
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,SCRAM-SHA-512
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'false'
      KAFKA_ZOOKEEPER_SASL_ENABLED: 'false'
      KAFKA_ZOOKEEPER_SET_ACL: 'false'

  sasl-schema-registry:
    image: confluentinc/cp-schema-registry:${VERSION}
    hostname: sasl-schema-registry
    container_name: sasl-schema-registry
    stop_grace_period: 120s
    healthcheck:
      test: curl --fail -u sr:sr-secret http://localhost:8081/ || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    ports:
      - "8081:8081"
    depends_on:
      sasl-broker-1:
        condition: service_healthy
      sasl-broker-2:
        condition: service_healthy
      sasl-broker-3:
        condition: service_healthy
    volumes:
      - sr_secrets:/etc/schema-registry/secrets/
      - ./secrets:/etc/kafka/secrets/
      - ./jmx_prometheus:/opt/jmx_prometheus
    environment:
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081,https://0.0.0.0:8082
      SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: https
      SCHEMA_REGISTRY_HOST_NAME: sasl-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: sasl-broker-1:9092,sasl-broker-2:9092,sasl-broker-3:9092
      #SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username='kafka-admin'  password='kafka-admin-secret';"
      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_PLAINTEXT
      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: PLAIN
      KAFKA_METRIC_REPORTERS:
      CONFLUENT_METRICS_ENABLE: 'false'
      SCHEMA_REGISTRY_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/sr_jaas.conf
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/sr-config.yml
      #KafkaReadyCommand is called prior to SchemaRegistry pulls in jaas credentials from KAFKA_OPTS (or SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG), but not from SCHEMA_REGISTRY_OPTS
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/sr_jaas.conf
        -Djavax.net.debug=ssl:trustmanager,session,handshake:verbose
      EXTRA_OPTS: >-
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/sr-config.yml
      SCHEMA_REGISTRY_AUTHENTICATION_METHOD: "BASIC"
      SCHEMA_REGISTRY_AUTHENTICATION_ROLES: "write,read,admin"
      SCHEMA_REGISTRY_AUTHENTICATION_REALM: "SchemaRegistry"
      SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/sasl-schema-registry.keystore.jks
      SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD: broker_secret
      SCHEMA_REGISTRY_SSL_KEY_PASSWORD: broker_secret
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.server.truststore.jks
      SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD: broker_secret


  sasl-connect-1:
    image: confluentinc/cp-kafka-connect:${VERSION}
    hostname: sasl-connect-1
    container_name: sasl-connect-1
    healthcheck:
      test: curl -k --fail -u sr:sr-secret https://sasl-connect-1:8083/ || exit 1
      start_period: 30s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      sasl-broker-1:
        condition: service_healthy
      sasl-broker-2:
        condition: service_healthy
      sasl-broker-3:
        condition: service_healthy
    volumes:
      - ct:/var/lib/kafka/data
      - ct_secrets:/etc/kafka/secrets
      - ./jmx_prometheus:/opt/jmx_prometheus
      - ./jars:/etc/kafka-connect/jars
      - ./data:/data
      - ./secrets:/etc/kafka-connect/secrets
    command:
      - /bin/bash
      - -c
      - |
        confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:latest
        /etc/confluent/docker/run &
        sleep infinity
    environment:
      CONNECT_BOOTSTRAP_SERVERS: sasl-broker-1:9092,sasl-broker-2:9092,sasl-broker-3:9092
      CONNECT_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONNECT_SASL_MECHANISM: PLAIN
      CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONNECT_PRODUCER_SASL_MECHANISM: PLAIN
      CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONNECT_CONSUMER_SASL_MECHANISM: PLAIN
      CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: All
      CONNECT_LISTENERS: https://sasl-connect-1:8083
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: 'connect'
      CONNECT_CONFIG_STORAGE_TOPIC: 'connect-config'
      CONNECT_OFFSET_STORAGE_TOPIC: 'connect-offsets'
      CONNECT_STATUS_STORAGE_TOPIC: 'connect-status'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_CONFIG_PROVIDERS: file
      CONNECT_CONFIG_PROVIDERS_FILE_CLASS: 'org.apache.kafka.common.config.provider.FileConfigProvider'
      CONNECT_KEY_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'https://sasl-schema-registry:8082'
      CONNECT_KEY_CONVERTER_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: "sr:sr-secret"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'https://sasl-schema-registry:8082'
      CONNECT_VALUE_CONVERTER_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: "sr:sr-secret"
#      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
#      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_REST_ADVERTISED_HOST_NAME: 'sasl-connect-1'
      CONNECT_REST_EXTENSION_CLASSES: 'org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension'
      CONNECT_PLUGIN_PATH: /etc/kafka-connect/jars,/usr/share/confluent-hub-components,/usr/share/java,/usr/share/filestream-connectors
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_SSL_KEYSTORE_LOCATION: /etc/kafka-connect/secrets/sasl-connect-1.keystore.jks
      CONNECT_SSL_KEYSTORE_PASSWORD: broker_secret
      CONNECT_SSL_KEY_PASSWORD: broker_secret
      CONNECT_SSL_TRUSTSTORE_LOCATION: /etc/kafka-connect/secrets/kafka.server.truststore.jks
      CONNECT_SSL_TRUSTSTORE_PASSWORD: broker_secret
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka-connect/secrets/connect_jaas.conf
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/connect-config.yml
        -Djavax.net.debug=ssl:trustmanager,session,handshake:verbose

  sasl-connect-2:
    image: confluentinc/cp-kafka-connect:${VERSION}
    hostname: sasl-connect-2
    container_name: sasl-connect-2
    healthcheck:
      test: curl -k --fail -u sr:sr-secret https://sasl-connect-2:8083/ || exit 1
      start_period: 30s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      sasl-broker-1:
        condition: service_healthy
      sasl-broker-2:
        condition: service_healthy
      sasl-broker-3:
        condition: service_healthy
    volumes:
      - ct:/var/lib/kafka/data
      - ct_secrets:/etc/kafka/secrets
      - ./jmx_prometheus:/opt/jmx_prometheus
      - ./jars:/etc/kafka-connect/jars
      - ./data:/data
      - ./secrets:/etc/kafka-connect/secrets
    command:
      - /bin/bash
      - -c
      - |
        confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:latest
        /etc/confluent/docker/run &
        sleep infinity
    environment:
      CONNECT_BOOTSTRAP_SERVERS: sasl-broker-1:9092,sasl-broker-2:9092,sasl-broker-3:9092
      CONNECT_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONNECT_SASL_MECHANISM: PLAIN
      CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONNECT_PRODUCER_SASL_MECHANISM: PLAIN
      CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_PLAINTEXT
      CONNECT_CONSUMER_SASL_MECHANISM: PLAIN
      CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: All
      CONNECT_LISTENERS: https://sasl-connect-2:8083
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: 'connect'
      CONNECT_CONFIG_STORAGE_TOPIC: 'connect-config'
      CONNECT_OFFSET_STORAGE_TOPIC: 'connect-offsets'
      CONNECT_STATUS_STORAGE_TOPIC: 'connect-status'
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_CONFIG_PROVIDERS: file
      CONNECT_CONFIG_PROVIDERS_FILE_CLASS: 'org.apache.kafka.common.config.provider.FileConfigProvider'
      CONNECT_KEY_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'https://sasl-schema-registry:8082'
      CONNECT_KEY_CONVERTER_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: "sr:sr-secret"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'https://sasl-schema-registry:8082'
      CONNECT_VALUE_CONVERTER_BASIC_AUTH_CREDENTIALS_SOURCE: USER_INFO
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: "sr:sr-secret"
#      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
#      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_REST_ADVERTISED_HOST_NAME: 'sasl-connect-2'
      CONNECT_REST_EXTENSION_CLASSES: 'org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension'
      CONNECT_PLUGIN_PATH: /etc/kafka-connect/jars,/usr/share/confluent-hub-components,/usr/share/java,/usr/share/filestream-connectors
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_SSL_KEYSTORE_LOCATION: /etc/kafka-connect/secrets/sasl-connect-2.keystore.jks
      CONNECT_SSL_KEYSTORE_PASSWORD: broker_secret
      CONNECT_SSL_KEY_PASSWORD: broker_secret
      CONNECT_SSL_TRUSTSTORE_LOCATION: /etc/kafka-connect/secrets/kafka.server.truststore.jks
      CONNECT_SSL_TRUSTSTORE_PASSWORD: broker_secret
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka-connect/secrets/connect_jaas.conf
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/connect-config.yml
        -Djavax.net.debug=ssl:trustmanager,session,handshake:verbose


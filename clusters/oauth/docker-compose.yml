---

networks:
  default:
    external: true
    name: kafka-toolage

volumes:
  zk: {}
  zk_log: {}
  zk_secrets: {}
  bk1: {}
  bk2: {}
  bk3: {}
  bk4: {}

services:

  oauth-zookeeper:
    image: confluentinc/cp-zookeeper:7.2.0
    hostname: oauth-zookeeper
    container_name: oauth-zookeeper
    healthcheck:
      test: echo ruok | nc -w 2 localhost 2181 | grep imok
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    volumes:
      - zk:/var/lib/zookeeper/data
      - zk_log:/var/lib/zookeeper/log
      - zk_secrets:/etc/zookeeper/secrets
      - ./jmx_prometheus:/opt/jmx_prometheus
      - ./secrets:/etc/zookeeper/secrets
      - ./oauth-client/build/libs/kafka-auth0-1.0.0-all.jar:/usr/share/java/kafka/kafka-auth0.jar
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_AUTH_PROVIDER_SASL: org.apache.zookeeper.server.auth.SASLAuthenticationProvider
      KAFKA_OPTS: >-
        -Dzookeeper.4lw.commands.whitelist=ruok,stat
        -Djava.security.auth.login.config=/etc/zookeeper/secrets/zookeeper_jaas.conf
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/zookeeper-config.yml
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN

  oauth-broker-1:
    image: confluentinc/cp-kafka:7.2.0
    hostname: oauth-broker-1
    container_name: oauth-broker-1
    stop_grace_period: 120s
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      oauth-zookeeper:
        condition: service_healthy
      oauth-hydra:
        condition: service_healthy
    volumes:
      - bk1:/var/lib/kafka/data
      - ./jmx_prometheus:/opt/jmx_prometheus
      - ./secrets:/etc/kafka/secrets/
      - ./oauth-client/build/libs/kafka-auth0-1.0.0-all.jar:/usr/share/java/kafka/kafka-auth0.jar
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'oauth-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,EXTERNAL_SSL:SASL_SSL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://oauth-broker-1:9092,EXTERNAL_SSL://oauth-broker-1:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_SSL_KEYSTORE_FILENAME: oauth-broker-1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka.key
      KAFKA_SSL_KEY_CREDENTIALS: kafka.key
      KAFKA_SSL_CLIENT_AUTH: none
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka.key
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.server.truststore.jks
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: User:kafka-admin;User:kafka-broker
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/broker_jaas.conf
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml
      KAFKA_METRIC_REPORTERS:
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,OAUTHBEARER
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'false'
      KAFKA_ZOOKEEPER_SASL_ENABLED: 'false'
      KAFKA_ZOOKEEPER_SET_ACL: 'false'
      KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL__SSL_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      #KAFKA_LISTENER_NAME_EXTERNAL__SSL_OAUTHBEARER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required a=b ;"
      KAFKA_LISTENER_NAME_EXTERNAL__SSL_OAUTHBEARER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required tokenUrl=\"http://hydra:4444/oauth2/token\" introspectUrl=\"http://hydra:4445/oauth2/introspect\" username=\"broker-kafka\" password=\"broker-kafka\" ;"
      #KAFKA_LISTENER_NAME_EXTERNAL__SSL_OAUTHBEARER_SASL_JAAS_CONFIG: org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;
      KAFKA_LISTENER_NAME_EXTERNAL__SSL_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: dev.buesing.oauth.OauthAuthenticateValidatorCallbackHandler
      KAFKA_LISTENER_NAME_EXTERNAL__SSL_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: dev.buesing.oauth.OauthAuthenticateLoginCallbackHandler

#      KAFKA_LISTENER_NAME_EXTERNAL__SSL_PLAIN_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"kafka-broker\" password=\"kafka-broker-secret\" user_kafka-admin=\"kafka-admin-secret\";"

#      KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;"
#      KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
#      KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler

#      # Configure token listener
#      KAFKA_LISTENER_NAME_TOKEN_SASL_ENABLED_MECHANISMS: OAUTHBEARER
#      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
#      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
#      KAFKA_LISTENER_NAME_TOKEN_OAUTHBEARER_SASL_JAAS_CONFIG: |
#        \
#        org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
#        publicKeyPath="/tmp/conf/public.pem";
      # OAuth Configuration
      OAUTH_WITH_SSL: "false"
      OAUTH_LOGIN_SERVER : "hydra:4444"
      OAUTH_LOGIN_ENDPOINT : "/oauth2/token"
      OAUTH_LOGIN_GRANT_TYPE: "client_credentials"
      OAUTH_LOGIN_SCOPE: "broker.kafka"
      OAUTH_AUTHORIZATION : "Basic YnJva2VyLWthZmthOmJyb2tlci1rYWZrYQ=="
      OAUTH_INTROSPECT_SERVER : "hydra:4445"
      OAUTH_INTROSPECT_ENDPOINT : "/oauth2/introspect"
      OAUTH_INTROSPECT_AUTHORIZATION : "Basic YnJva2VyLWthZmthOmJyb2tlci1rYWZrYQ=="

  oauth-broker-2:
    image: confluentinc/cp-kafka:7.2.0
    hostname: oauth-broker-2
    container_name: oauth-broker-2
    stop_grace_period: 120s
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      oauth-zookeeper:
        condition: service_healthy
      oauth-hydra:
        condition: service_healthy
    volumes:
      - bk2:/var/lib/kafka/data
      - ./jmx_prometheus:/opt/jmx_prometheus
      - ./secrets:/etc/kafka/secrets/
      - ./oauth-client/build/libs/kafka-auth0-1.0.0-all.jar:/usr/share/java/kafka/kafka-auth0.jar
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'oauth-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,EXTERNAL_SSL:SASL_SSL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://oauth-broker-2:9092,EXTERNAL_SSL://oauth-broker-2:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_SSL_KEYSTORE_FILENAME: oauth-broker-2.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka.key
      KAFKA_SSL_KEY_CREDENTIALS: kafka.key
      KAFKA_SSL_CLIENT_AUTH: none
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka.key
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.server.truststore.jks
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: User:kafka-admin;User:kafka-broker
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/broker_jaas.conf 
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml
      KAFKA_METRIC_REPORTERS:
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,OAUTHBEARER
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'false'
      KAFKA_ZOOKEEPER_SASL_ENABLED: 'false'
      KAFKA_ZOOKEEPER_SET_ACL: 'false'
      KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL__SSL_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_LISTENER_NAME_EXTERNAL__SSL_OAUTHBEARER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required tokenUrl=\"http://hydra:4444/oauth2/token\" introspectUrl=\"http://hydra:4445/oauth2/introspect\" username=\"broker-kafka\" password=\"broker-kafka\" ;"
      KAFKA_LISTENER_NAME_EXTERNAL__SSL_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: dev.buesing.oauth.OauthAuthenticateLoginCallbackHandler
      KAFKA_LISTENER_NAME_EXTERNAL__SSL_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: dev.buesing.oauth.OauthAuthenticateValidatorCallbackHandler

  oauth-broker-3:
    image: confluentinc/cp-kafka:7.2.0
    hostname: oauth-broker-3
    container_name: oauth-broker-3
    stop_grace_period: 120s
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      oauth-zookeeper:
        condition: service_healthy
      oauth-hydra:
        condition: service_healthy
    volumes:
      - bk3:/var/lib/kafka/data
      - ./jmx_prometheus:/opt/jmx_prometheus
      - ./secrets:/etc/kafka/secrets/
      - ./oauth-client/build/libs/kafka-auth0-1.0.0-all.jar:/usr/share/java/kafka/kafka-auth0.jar
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'oauth-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,EXTERNAL_SSL:SASL_SSL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://oauth-broker-3:9092,EXTERNAL_SSL://oauth-broker-3:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 500
      KAFKA_SSL_KEYSTORE_FILENAME: oauth-broker-3.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: kafka.key
      KAFKA_SSL_KEY_CREDENTIALS: kafka.key
      KAFKA_SSL_CLIENT_AUTH: none
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: kafka.key
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.server.truststore.jks
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      KAFKA_SUPER_USERS: User:kafka-admin;User:kafka-broker
      KAFKA_OPTS: >-
        -Djava.security.auth.login.config=/etc/kafka/secrets/broker_jaas.conf 
        -javaagent:/opt/jmx_prometheus/jmx_prometheus_javaagent.jar=7071:/opt/jmx_prometheus/kafka-config.yml
      KAFKA_METRIC_REPORTERS:
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN,OAUTHBEARER
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_ZOOKEEPER_SSL_CLIENT_ENABLE: 'false'
      KAFKA_ZOOKEEPER_SASL_ENABLED: 'false'
      KAFKA_ZOOKEEPER_SET_ACL: 'false'
      KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_LISTENER_NAME_EXTERNAL__SSL_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      #KAFKA_LISTENER_NAME_EXTERNAL__SSL_OAUTHBEARER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required ;"
      KAFKA_LISTENER_NAME_EXTERNAL__SSL_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: dev.buesing.oauth.OauthAuthenticateValidatorCallbackHandler
      KAFKA_LISTENER_NAME_EXTERNAL__SSL_OAUTHBEARER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required tokenUrl=\"http://hydra:4444/oauth2/token\" introspectUrl=\"http://hydra:4445/oauth2/introspect\" username=\"broker-kafka\" password=\"broker-kafka\" ;"
      KAFKA_LISTENER_NAME_EXTERNAL__SSL_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: dev.buesing.oauth.OauthAuthenticateLoginCallbackHandler

#  oauth2:
#    image: ghcr.io/navikt/mock-oauth2-server:0.4.4
#    hostname: oauth2
#    container_name: oauth2
#    ports:
#      - "8080:8080"
#    environment:
#      - JSON_CONFIG={"interactiveLogin":false,"httpServer":"MockWebServerWrapper","tokenCallbacks":[{"issuerId":"default","requestMappings":[{"requestParam":"scope","match":"https://storage.azure.com/user_impersonation","claims":{"sub":"https://sts.windows.net/","aud":["https://storage.azure.com"],"iss":"https://sts.windows.net/"}}]}]}
#

  oauth-hydra:
    build : ./hydra
    hostname: hydra
    container_name: hydra
    ports:
      - "4444:4444" # public
      - "4445:4445" # admin
      - "5555:5555" # Port for hydra token user
    healthcheck:
      test: wget --spider http://127.0.0.1:4445/health/alive || exit 1
      start_period: 30s
      interval: 10s
      timeout: 10s
      retries: 3



#    depends_on:
#      - hydra-migrate
    #entrypoint: ./kowl --config.filepath=/etc/kowl/config.yaml
    #command: serve -c /etc/config/hydra/hydra.yml all --dangerous-force-http
#    entrypoint: /etc/config/hydra/entrypoint.sh
#    command:
#    volumes:
 #     - ./sqlite:/var/lib/sqlite
#      - ./quickstart:/etc/config/hydra
#    environment:
#      - DSN=sqlite:///var/lib/sqlite/db.sqlite?_fk=true
#      - SECRETS_SYSTEM=constant_for_demonstration_only_3cuR3-._
#      - LOG_LEAK_SENSITIVE_VALUES=true

#  consent:
#    image: oryd/hydra-login-consent-node:v1.11.7
#    hostname: consent
#    container_name: consent
#    environment:
#      - HYDRA_ADMIN_URL=http://hydra:4445
#    ports:
#      - "3000:3000"
